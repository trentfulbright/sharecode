import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;
import java.util.TreeSet;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author s820702
 */
public class HangmanManager {
    List<String> originalDictionary;
    int length;
    int max;
    Set<String> culledDictionary;
    Set<String> guesses = new TreeSet<String>();
    String pattern;
    final char[] templatePattern;
    Set<String> words;

    public HangmanManager(List<String> dictionary2, int length, int max) {
        originalDictionary = dictionary2;
        culledDictionary = (Set<String>) dictionary2;
        this.length = length;
        this.max = max;
        char[] chars = new char[max];
        Arrays.fill(chars, '-');
        pattern = new String(chars);
        templatePattern = chars;
        words = new TreeSet<>();
         for(String s : dictionary2) {
        if(s.length() == length) 
            words.add(s);
   }
        
    }

    public Set<String> words() {
        return (Set<String>) culledDictionary;
    }

    int guessesLeft() {
        return max - guesses.size();
    }

    String pattern() {
       return pattern;
    }

    Set<String> guesses() {
        return guesses;
    }

    int record(char ch) {
        Map temp = new TreeMap<String, Set<String>>();
        for(int i = 0; i<originalDictionary.size(); i++){
            if(!temp.containsKey(getPattern(originalDictionary.get(i), ch))){
                Set<String> set = new TreeSet<>();
                set.add(originalDictionary.get(i));
                temp.put(getPattern(originalDictionary.get(i), ch), set);                               
            }
            else{
                
                Set<String> set = (TreeSet<String>) temp.get(getPattern(originalDictionary.get(i), ch));
                set.add(originalDictionary.get(i));
                temp.put(getPattern(originalDictionary.get(i), ch), set);
            }
        }
        Set<String> currentSet = (Set<String>) temp.get(getPattern(originalDictionary.get(1), ch));
        for(Object s : temp.keySet()){
            if(temp.get(s).size()>currentSize){
                
            }
        }
 
        
    }
    String getPattern(String cur, char c){
        char[] temp = templatePattern;
        for(int i = 0; i<cur.length(); i++){
            if(Character.compare(cur.charAt(i), c)== 0 ){
                temp[i] = c;
            }
        }
        return new String(temp);
    }

    

    
    
}
