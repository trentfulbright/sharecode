import java.io.PrintStream;
import java.util.PriorityQueue;
import java.util.Scanner;

public class HuffmanCode {
    private static class HuffmanNode implements Comparable<HuffmanNode>{
        public final int frequency;
        public final char character;
        HuffmanNode left;
        HuffmanNode right;
        public HuffmanNode(int frequency, char character){
            this.frequency = frequency;
            this.character = character;
            left = null;
            right = null;
        }
        public int compareTo(HuffmanNode node){
            return Integer.compare(frequency, node.frequency);
        }
    }

    PriorityQueue<HuffmanNode> PQ;
    public HuffmanCode(int[] frequencies){
        for(int i = 0 ;i<frequencies.length; i++){
            if(frequencies[i] > 0){
                PQ.add(new HuffmanNode(frequencies[i], (char) i));
            }
        }

    }
    public HuffmanCode(Scanner input){

    }

    public void save(PrintStream output){

    }

    

}
